# Generated by Django 5.0.1 on 2024-03-02 23:47

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('about_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('about_uz', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('image_en', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='images/about_page/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_ru', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='images/about_page/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_uz', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='images/about_page/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('phone', models.CharField(max_length=13, null=True)),
                ('message', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=1000)),
                ('received_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('reply_subject', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255, null=True)),
                ('reply_message', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=1000, null=True)),
                ('replied_date', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', ckeditor_uploader.fields.RichTextUploadingField(max_length=255, null=True)),
                ('title_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255, null=True)),
                ('title_uz', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='gallery/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg'])])),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
            },
        ),
        migrations.CreateModel(
            name='Graveyard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='graveyard/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('english', models.BooleanField(blank=True, default=1)),
                ('russian', models.BooleanField(blank=True, default=1)),
                ('uzbek', models.BooleanField(blank=True, default=1)),
            ],
            options={
                'verbose_name': 'Graveyard',
                'verbose_name_plural': 'Graveyards',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999)])),
                ('amount', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now=True, null=True)),
                ('views', models.IntegerField(blank=True, default=0, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='services/services_icon/')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_2', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_3', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_4', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('english', models.BooleanField(blank=True, default=1)),
                ('russian', models.BooleanField(blank=True, default=1)),
                ('uzbek', models.BooleanField(blank=True, default=1)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=600)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='MyServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999)])),
                ('date', models.DateField(auto_now=True, null=True)),
                ('views', models.IntegerField(blank=True, default=0, null=True)),
                ('icon', models.FileField(blank=True, null=True, unique=True, upload_to='services/services_icon/')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_2', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_3', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('image_4', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=65, scale=None, size=[1920, 1080], upload_to='services/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg', 'webp'])])),
                ('english', models.BooleanField(blank=True, default=1)),
                ('russian', models.BooleanField(blank=True, default=1)),
                ('uzbek', models.BooleanField(blank=True, default=1)),
                ('total_price', models.CharField(max_length=300)),
                ('payment_status', models.CharField(choices=[('new', 'Yangi'), ('paid', "To'landi"), ('canceled', 'Bekor qilindi')], max_length=300)),
                ('payment_type', models.CharField(choices=[('payme', 'Payme'), ('click', 'Click')], max_length=300)),
                ('payment_time', models.TimeField(auto_now_add=True)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('services', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rememberApp.price')),
            ],
            options={
                'verbose_name': 'My Service',
                'verbose_name_plural': 'My Services',
            },
        ),
        migrations.AddField(
            model_name='price',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rememberApp.services'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=13, null=True)),
                ('text', models.CharField(max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('approved', models.BooleanField(blank=True, default=False)),
                ('reply_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_message', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=1000, null=True)),
                ('replied_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rememberApp.services')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='CalculateCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=13, null=True)),
                ('text', models.CharField(max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('approved', models.BooleanField(blank=True, default=False)),
                ('reply_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('reply_message', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=1000, null=True)),
                ('replied_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rememberApp.services')),
            ],
            options={
                'verbose_name': 'Calculate cost',
                'verbose_name_plural': 'Calculate costs',
            },
        ),
    ]
